ClassDiagram [frame=true framecolor=steelblue label="Class Diagram"] {
 abstract class User {
  private lastName : String
  private firstName : String
  private email : String
  private soldeJetons: Decimal
  public login(email: String, password:String)
  public consulterPari()
  public consulterEvent()
  public placerPari()
  public rechargerJetons()
 }
 
  class Bookmaker {
  public defineEvent()
    public defineOdd()
    public limitBetAmount() //Limiter le montant du pari
  }
 
  class Sport {
  private sportName : String
  }
 
  class Bet {
    public betType : BetType
    public betOdd : decimal
    public amount : float
  }
 
  class Option {
  private optionName : String
    public BetType : Bet
  }
 
  class SportEvent {
  private eventName : String
    private eventDateAndTime : DateTime
    private homeTeam : String
    private awayTeam : String
    public addEvent()
    public updateOdds()
  }
 
  class RealTimeDataProvider {
    public getEventData() : List
}
 
  User "1" -- "0..*" Bet: "consulter pari";
  Bet "0..*" -- "*" Sport: "être en lien";
  Option "*" -- "*" Sport "possède";
  Option "*" -- "*" Bet "possède";
  SportEvent "1..*" -- "0..*" Bet "est en lien avec";
  Bookmaker "1" -- "*" SportEvent: "définir les évènements proposés";
  RealTimeDataProvider "1" --  "0..*" SportEvent "est en rapport avec";
 
  Bookmaker -g-> User
}
